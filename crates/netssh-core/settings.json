{
    "network": {
        "// Documentation 1": "Network-related timeout settings control all network I/O operations",
        "tcp_connect_timeout_secs": 60,
        "// Connect timeout": "Timeout for establishing TCP connections (used in BaseConnection::connect)",
        "tcp_read_timeout_secs": 30,
        "// Read timeout": "Timeout for reading data from TCP sockets (used throughout SSH channel operations)",
        "tcp_write_timeout_secs": 30,
        "// Write timeout": "Timeout for writing data to TCP sockets (used in SSH channel write operations)",
        "default_ssh_port": 22,
        "// Default port": "Default SSH port to use when none is specified",
        "command_response_timeout_secs": 30,
        "// Command timeout": "Maximum time to wait for a response after sending a command (in BaseConnection::send_command)",
        "pattern_match_timeout_secs": 20,
        "// Pattern timeout": "Maximum time to wait for a pattern match when reading output (in BaseConnection::read_until_pattern)",
        "command_exec_delay_ms": 100,
        "// Command delay": "Short delay between sending a command and starting to read the response (in BaseConnection::send_command)",
        "retry_delay_ms": 1000,
        "// Retry delay": "Delay between retry attempts in milliseconds (used in error recovery)",
        "max_retry_attempts": 3,
        "// Max retries": "Maximum number of retry attempts for operations that support retrying",
        "device_operation_timeout_secs": 120,
        "// Device timeout": "Timeout for device-specific operations that might take longer (used in vendor implementations)"
    },
    "ssh": {
        "// Documentation 2": "SSH-specific settings control the SSH protocol operations",
        "blocking_timeout_secs": 1,
        "// Blocking timeout": "Timeout for all blocking libssh2 function calls (read/write/auth/etc). Set to 0 for no timeout.",
        "auth_timeout_secs": 30,
        "// Auth timeout": "Timeout for SSH authentication operations (used in BaseConnection::connect)",
        "keepalive_interval_secs": 60,
        "// Keepalive interval": "Interval for sending SSH keepalive packets (used in BaseConnection::keep_alive)",
        "channel_open_timeout_secs": 20,
        "// Channel timeout": "Timeout for opening SSH channels (used in BaseConnection::open_channel)"
    },
    "buffer": {
        "// Documentation 3": "Buffer settings control memory usage for I/O operations",
        "read_buffer_size": 65536,
        "// Buffer size": "Default read buffer size in bytes (used in SSHChannel operations)",
        "buffer_pool_size": 32,
        "// Pool size": "Maximum number of buffers to keep in the buffer pool (affects memory usage)",
        "buffer_reuse_threshold": 16384,
        "// Reuse threshold": "Buffers smaller than this will be reused, larger ones will be allocated (performance vs memory tradeoff)",
        "auto_clear_buffer": true,
        "// Auto clear": "Whether to automatically clear the buffer before sending commands (affects command output parsing)"
    },
    "concurrency": {
        "// Documentation 4": "Concurrency settings control parallel connection handling",
        "max_connections": 100,
        "// Max connections": "Maximum number of concurrent connections allowed (used in connection pooling)",
        "permit_acquire_timeout_ms": 5000,
        "// Permit timeout": "Timeout for acquiring a connection permit in milliseconds (prevents excessive queuing)",
        "connection_idle_timeout_secs": 300,
        "// Idle timeout": "How long a connection can remain idle before being closed (affects resource usage)"
    },
    "logging": {
        "// Documentation 5": "Logging settings control debug and session logging",
        "enable_session_log": false,
        "// Enable logs": "Whether to enable session logging (records all SSH session activity)",
        "session_log_path": "logs",
        "// Log path": "Path to the session log directory (logs are stored with timestamp and session ID)",
        "log_binary_data": false,
        "// Log binary": "Whether to log binary data (increases log size but useful for debugging binary protocols)"
    }
}