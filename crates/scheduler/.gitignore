# Rust
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Database files
*.db
*.sqlite
*.sqlite3
scheduler.db
example.db
example_with_board.db

# Log files
*.log
scheduler.log

# Configuration files with sensitive data
config.local.toml
.env
.env.local
.env.production

# IDE and Editor files
# VSCode
.vscode/
*.code-workspace

# IntelliJ IDEA / CLion
.idea/
*.iml
*.ipr
*.iws

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Backup files
*.bak
*.backup
*.old
*.orig

# Test files
test_*.json
*.test

# Coverage reports
tarpaulin-report.html
cobertura.xml
lcov.info

# Benchmark results
criterion/

# Documentation build
book/
docs/_build/

# Temporary files
tmp/
temp/
.tmp/

# SSH keys (if any are accidentally placed in project)
*.pem
*.key
id_rsa*
id_ed25519*

# SSL certificates
*.crt
*.cert
*.p12
*.pfx

# Application specific
# Job scheduler specific files
jobs_data/
logs/
backups/

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Node.js (if any frontend tools are used)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if any Python tools are used)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# JetBrains IDEs
.idea/
*.iml

# Local development
local/
dev/
development/

# Performance profiling
perf.data*
flamegraph.svg
profile.pb

# Security scanning results
audit.json
security-audit.json
apalis_queue.db-shm
apalis_queue.db-wal
target
