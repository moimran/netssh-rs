[package]
name = "scheduler"
version.workspace = true
edition.workspace = true
authors.workspace = true
description = "A job scheduler application using Rust with Apalis and SSH execution capabilities"
license = "MIT"

[dependencies]
# Job scheduling core
apalis.workspace = true
apalis-sql.workspace = true
apalis-cron.workspace = true

# Note: apalis-board is not yet available, implementing custom board UI

# Database
sqlx.workspace = true

# SSH functionality (using local workspace dependency)
netssh-core = { path = "../netssh-core" }
shared-config = { path = "../shared-config" }

# Web framework
axum.workspace = true
tower.workspace = true
tower-http.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true

# Async runtime
tokio.workspace = true

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# Logging
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-appender.workspace = true

# Configuration
config.workspace = true

# Time handling
chrono.workspace = true
chrono-tz.workspace = true
cron.workspace = true

# UUID generation
uuid.workspace = true

# Environment variables
dotenvy.workspace = true

# Additional utilities
async-trait.workspace = true
once_cell = "1.19"

[dev-dependencies]
tempfile.workspace = true
tokio-test.workspace = true

[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"

[[example]]
name = "with_board"
path = "examples/with_board.rs"

[[example]]
name = "logging_demo"
path = "examples/logging_demo.rs"

[[example]]
name = "phase1_connection_reuse"
path = "examples/phase1_connection_reuse.rs"
